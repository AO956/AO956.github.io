{"pages":[{"title":"歌单","text":"本人的QQ音乐收藏","path":"playlist/index.html","date":"06-23","excerpt":""},{"title":"about","text":"AO956自我标签：oi蒟蒻；死宅；月莫法师；公知；esu小鬼；inm民；德棍；FPS爱好者；Galgame玩家；hentai； 话题：·ACGN的内容 ·计算机技术交流，啥也不会 ·时间研究与包子的乳化 ·游戏（指3A大作与gal，不包括鹅厂猪厂） ·二战史与第三帝国的兴衰 ·其他各大亚文化（不包括车万） 联系方式：·QQ：496636173 ·Twitter：AO956 ·屑站：AO956_ 并没有什么作品 ·Github：AO956 ·steam：AO956","path":"about/index.html","date":"06-21","excerpt":""},{"title":"categories","text":"此页面建设中","path":"categories/index.html","date":"06-21","excerpt":""},{"title":"留言板","text":"诚邀前端开发帮我完成这个页面，，，，","path":"留言板/index.html","date":"06-21","excerpt":""}],"posts":[{"title":"洛谷P1516：青蛙的约会","text":"为什么选择这个题相信真正的粉丝早已看穿了一切 先看原题：青蛙的约会题目描述两只青蛙在网上相识了，它们聊得很开心，于是觉得很有必要见一面。它们很高兴地发现它们住在同一条纬度线上，于是它们约定各自朝西跳，直到碰面为止。可是它们出发之前忘记了一件很重要的事情，既没有问清楚对方的特征，也没有约定见面的具体位置。不过青蛙们都是很乐观的，它们觉得只要一直朝着某个方向跳下去，总能碰到对方的。但是除非这两只青蛙在同一时间跳到同一点上，不然是永远都不可能碰面的。为了帮助这两只乐观的青蛙，你被要求写一个程序来判断这两只青蛙是否能够碰面，会在什么时候碰面。 我们把这两只青蛙分别叫做青蛙A和青蛙B，并且规定纬度线上东经0度处为原点，由东往西为正方向，单位长度1米，这样我们就得到了一条首尾相接的数轴。设青蛙A的出发点坐标是x，青蛙B的出发点坐标是y。青蛙A一次能跳m米，青蛙B一次能跳n米，两只青蛙跳一次所花费的时间相同。纬度线总长L米。现在要你求出它们跳了几次以后才会碰面。 输入输出格式输入格式： 输入只包括一行5个整数x，y，m，n，L 其中0&lt;x≠y &lt; =2000000000，0 &lt; m、n &lt; =2000000000，0 &lt; L &lt; =2100000000。 输出格式： 输出碰面所需要的天数，如果永远不可能碰面则输出一行”Impossible”。 去你🐎的数论同余方程，纬线绕一圈可以绕回来，所以是能取模。阅读题目，经过颅内分析，可以得到同余方程： x+tm≡y+tn(mod L)然后可以通过Exgcd来求解。先转化为不定方程 ： x+tm−y−tn=sL整理得： (m−n)t−Ls=y−x设： a=n−m,b=L,c=x−y代入可得： −at−bs=−c即： at+bs=c因此我们先求解: at+bs=gcd(a,b)解得一组特解，转化成最小正整数解即可。 首先我们来想如何得到最小正整数解： 设答案为x，我们得到的特解为x0，则根据我们的公式一定有： x0=x+k∗b/gcd(a,b)x我们可以把它看做出发的形式，即： x=x0取余(b/gcd(a,b))所以我们的答案就是： x取余(b/gcd(a,b))那如果x≤0，那么为了防止爆负数，我们的答案是： (x+(b/gcd(a,b))取余(b/gcd(a,b)但是考虑一下b/gcd(a,b)与a,b的符号， 若a,b同号那没事，如果a,b异号且a0，那么情况就有点麻烦了……… gcd(a,b)肯定小于0，而b&gt;0，所以 b/gcd(a,b) 一定小于0， 因此按照这样的做法，答案不仅无法变成最小正整数解，反而更小了…… 那么有没有一种方法来避免a0这种情况呢？ 考虑一下可不可以永远保持a为正数。 ax+by=c与−ax+by=−c的解是否完全一样？乍一眼看不出来，可以转化为同余方程的形式，那么前者就能够变成： c≡ax(mod b)后者就能够变成： ax≡c(mod b)貌似是完全一样的，，， 因此当a&lt;0时，a和c转换成相反数就可以了。 最后码的时候注意：Long Long 代码：数论题要什么代码，分析就行了。","path":"2019/06/24/洛谷P1516：青蛙的约会/","date":"06-24","excerpt":"","tags":[{"name":"蒟蒻题解","slug":"蒟蒻题解","permalink":"http://yoursite.com/tags/蒟蒻题解/"}]},{"title":"洛谷P3884:二叉树问题","text":"人生第一篇题解，，先看原题：二叉树问题题目描述如下图所示的一棵二叉树的深度、宽度及结点间距离分别为： 深度：4 宽度：4（同一层最多结点个数） 结点间距离： ⑧→⑥为8 (3×2+2=8) ⑥→⑦为3 （1×2+1=3） 注：结点间距离的定义：由结点向根方向（上行方向）时的边数×2， 与由根向叶结点方向（下行方向）时的边数之和。 输入输出格式输入格式： 输入文件第一行为一个整数n(1≤n≤100)，表示二叉树结点个数。接下来的n-1行，表示从结点x到结点y（约定根结点为1），最后一行两个整数u、v，表示求从结点u到结点v的距离。 输出格式： 三个数，每个数占一行，依次表示给定二叉树的深度、宽度及结点u到结点v间距离。 那么怎么做呢？这就是一个裸的LCA 分析一下，很明显的求公共祖先，我们可以用LCA；对于第一个子问题，就是找树上最深的点，一遍dfs即可实现，对于第二个子问题，就是看看相同深度的点数目的最大值是多少，对于对三个子问题，就是通过LCA求两点间的树上距离。 下面上代码：欸，别激动，我怎么会直接把代码给你cv，，","path":"2019/06/24/洛谷P3884-二叉树问题/","date":"06-24","excerpt":"","tags":[{"name":"蒟蒻题解","slug":"蒟蒻题解","permalink":"http://yoursite.com/tags/蒟蒻题解/"}]}]}